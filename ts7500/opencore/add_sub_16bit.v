/* Verilog netlist generated by SCUBA Diamond_1.2_Production (92) */
/* Module Version: 3.1 */
/* /usr/local/diamond/1.2/ispfpga/bin/lin/scuba -w -lang verilog -synth synplify -bus_exp 7 -bb -arch mg5a00 -type addsub -width 18 -signed -pipeline 0 -e  */
/* Tue May  8 11:42:43 2012 */


`timescale 1 ns / 1 ps
module add_sub_16bit (DataA, DataB, Add_Sub, Result);
    input wire [17:0] DataA;
    input wire [17:0] DataB;
    input wire Add_Sub;
    output wire [17:0] Result;

    wire scuba_vhi;
    wire add_sub_inv;
    wire co0;
    wire co1;
    wire co2;
    wire co3;
    wire co4;
    wire co5;
    wire co6;
    wire co7;
    wire co8;
    wire scuba_vlo;

    VHI scuba_vhi_inst (.Z(scuba_vhi));

    INV INV_0 (.A(Add_Sub), .Z(add_sub_inv));

    FADSU2 addsub_0 (.A0(add_sub_inv), .A1(DataA[0]), .B0(scuba_vlo), .B1(DataB[0]), 
        .BCI(scuba_vlo), .CON(Add_Sub), .BCO(co0), .S0(), .S1(Result[0]));

    FADSU2 addsub_1 (.A0(DataA[1]), .A1(DataA[2]), .B0(DataB[1]), .B1(DataB[2]), 
        .BCI(co0), .CON(Add_Sub), .BCO(co1), .S0(Result[1]), .S1(Result[2]));

    FADSU2 addsub_2 (.A0(DataA[3]), .A1(DataA[4]), .B0(DataB[3]), .B1(DataB[4]), 
        .BCI(co1), .CON(Add_Sub), .BCO(co2), .S0(Result[3]), .S1(Result[4]));

    FADSU2 addsub_3 (.A0(DataA[5]), .A1(DataA[6]), .B0(DataB[5]), .B1(DataB[6]), 
        .BCI(co2), .CON(Add_Sub), .BCO(co3), .S0(Result[5]), .S1(Result[6]));

    FADSU2 addsub_4 (.A0(DataA[7]), .A1(DataA[8]), .B0(DataB[7]), .B1(DataB[8]), 
        .BCI(co3), .CON(Add_Sub), .BCO(co4), .S0(Result[7]), .S1(Result[8]));

    FADSU2 addsub_5 (.A0(DataA[9]), .A1(DataA[10]), .B0(DataB[9]), .B1(DataB[10]), 
        .BCI(co4), .CON(Add_Sub), .BCO(co5), .S0(Result[9]), .S1(Result[10]));

    FADSU2 addsub_6 (.A0(DataA[11]), .A1(DataA[12]), .B0(DataB[11]), .B1(DataB[12]), 
        .BCI(co5), .CON(Add_Sub), .BCO(co6), .S0(Result[11]), .S1(Result[12]));

    FADSU2 addsub_7 (.A0(DataA[13]), .A1(DataA[14]), .B0(DataB[13]), .B1(DataB[14]), 
        .BCI(co6), .CON(Add_Sub), .BCO(co7), .S0(Result[13]), .S1(Result[14]));

    FADSU2 addsub_8 (.A0(DataA[15]), .A1(DataA[16]), .B0(DataB[15]), .B1(DataB[16]), 
        .BCI(co7), .CON(Add_Sub), .BCO(co8), .S0(Result[15]), .S1(Result[16]));

    VLO scuba_vlo_inst (.Z(scuba_vlo));

    FADSU2 addsub_9 (.A0(DataA[17]), .A1(Add_Sub), .B0(DataB[17]), .B1(scuba_vlo), 
        .BCI(co8), .CON(Add_Sub), .BCO(), .S0(Result[17]), .S1());



    // exemplar begin
    // exemplar end

endmodule
